

//DEBUG
$debug: false;
$DEV_border: 1px solid red;
%debugBack{
  background-color: rgba(51, 255, 0, 0.2);
}

//COLORS
$color-red: #C61212;
$color-red2: #FF3737;
$color-grey1: #B9B9B9;
$color-grey2: #D9D9D9;
$color-grey3: #E4E4E4;
$color-grey4: #F0F0F0;
$color-black: #252525;

$color-bg-maf-card: rgb(127, 38, 38);
$color-bg-civ-card: #86861f;
$color-bg-doc-card: #388827;
$color-bg-det-card: #2b628c;

//SIZES
$card_width1: 140px;
$card_width2: 120px;
$card_width3: 100%;
$card_height1: 200px;

$header_height1: 78px;
$header_height2: 50px;
$header_height3: 35px;



%allIN{
  height: 100%;
  width: 100%;
}

%center{
  display: flex;
  justify-content: center;
  align-items: center;
}

%centerPos{
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

%column{
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}


%scroll{
  &::-webkit-scrollbar {
    width: 12px;
  }

  &::-webkit-scrollbar-track {
    border-radius: 100px;
  }

  &::-webkit-scrollbar-thumb {
    border-radius: 100px;
    border: 3px solid transparent;
    background-clip: content-box;
    background-color: $color-grey1;
  }
}


//FONTS
%font {
  font-size: 16px;
  font-weight: 400;
  font-family: "Noto Serif", serif;
}

%font1 {
  font-size: 20px;
  font-weight: 400;
  font-family: "Noto Serif", serif;
}

%font2 {
  font-size: 35px;
  font-weight: 400;
  font-family: "Noto Serif", serif;
}

%font3 {
  font-size: 32px;
  font-weight: 700;
  font-family: "Noto Serif", serif;
}

%font4 {
  font-size: 100px;
  font-weight: 700;
  font-family: "Noto Serif", serif;
}


//ANIMATIONS
@keyframes shadow {
  from{
    box-shadow: 0 0 50px 70px rgb(106, 255, 50);
  }
  to{
    box-shadow: 0 0 50px 10px rgb(106, 255, 50);
  }
}



@mixin transPos($time) {
  transition: top $time cubic-bezier(0.175, 0.885, 0.32, 1.275);
}


//RESPONSIVE
$minW: 320px;
$minH: 480px;
$sm: 480px;
$md2: 768px;
$md: 1024px;
$lg: 1280px;

@mixin media($prop,$widths,$values){
  @each $nameW, $valW in $widths {
    @media screen and (max-width: $valW){
      @each $nameV, $valV in $values{
        @if $nameV==$nameW{
          #{$prop}: $valV
        }
      }
    }
  }
}


$as: calc($md / 2);
//$am: 0;
//$al: 0;
$ags: $as*2;
$sizes: (sm: $as, gsm: $ags);

@mixin autoMedia($prop,$values,$onHeight:false){
  @each $nameW, $valW in $sizes {
    @if($onHeight == false){
      @media screen and (max-width: $valW){
        @each $nameV, $valV in $values{
          @if $nameV==$nameW{
            #{$prop}: $valV
          }
        }
      }
    }
    @if($onHeight == true){
      @media screen and (max-height: $valW) {
        @each $nameV, $valV in $values{
          @if $nameV==$nameW{
            #{$prop}: $valV
          }
        }
      }
    }
  }
}


@mixin media-p1 {
  @media (width <= 1280px) {
    @content
  }
}

@mixin media-p2 {
  @media (width <= 1024px) {
    @content
  }
}

@mixin media-p3 {
  @media (width <= 768px) {
    @content
  }
}

@mixin media-p4 {
  @media (width <= 480px) {
    @content
  }
}

@mixin media-h1 {
  @media (height <= 900px) {
    @content
  }
}

@mixin media-h2 {
  @media (height <= 700px) {
    @content
  }
}

@mixin media-h2 {
  @media (height <= 700px) {
    @content
  }
}

@mixin media-h3 {
  @media (height <= 570px) {
    @content
  }
}

.test {
  @include media-p1 {
    background-color: green;
  }
  
  @media (width < 320px) {
    background-color: red;
  }
  @media (height < 480px) {
    background-color: red;
  }
}


%screenHeightWithoutHeader {
  height: calc(100vh - $header_height1);
}

@include media-p3 {
  %screenHeightWithoutHeader {
    height: calc(100vh - $header_height2);
  }
}
@include media-p4 {
  %screenHeightWithoutHeader {
    height: calc(100vh - $header_height3);
  }
}
@include media-h2 {
  %screenHeightWithoutHeader {
    height: calc(100vh - $header_height3);
  }
}